import React from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Box, Button, HStack, Textarea, useToast } from "@chakra-ui/react";
import { MouseEvent, MouseEventHandler, useEffect, useState } from "react";
import { NextPage } from "next";
import * as prettier from "prettier";
import * as cadence from "prettier-plugin-cadence";
// import CodeEditor from "@/components/molecules/editor/CodeEditor";
import dynamic from "next/dynamic";
// import fs from "fs";
// import * as antlr from "antlr4";

const CodeEditor = dynamic(
  () => import("@/components/molecules/editor/CodeEditor"),
  { ssr: false }
);
const inter = Inter({ subsets: ["latin"] });
const sampleCode = `
access(all) contract HelloWorld {
// Declare a public field of type String.
//
// All fields must be initialized in the init() function.
access(all) let greeting: String // The init() function is required if the contract contains any fields.
init(){self.greeting="Hello, World!"}
// Public function that returns our friendly greeting!
access(all) fun hello(): String {








return self.greeting
}
init(){self.greeting="Hello, World!"}
}
`;

const Home: NextPage = () => {
  const toast = useToast();
  const [before, setBefore] = useState<string>("");
  const [after, setAfter] = useState<string>("\n".repeat(29));
  const onClick = async () => {
    console.log(before);
    try {
      const text = prettier.format(before, {
        parser: "cadence",
        plugins: [cadence],
      });
      setAfter(text);
    } catch (error) {
      toast({
        title: `Could not parse Code.`,
        status: "error",
        description:
          "We are currently expanding the grammars that can be supported. Please wait for a while.",
        isClosable: true,
      });
      throw error;
    }
  };

  useEffect(() => {
    setBefore(sampleCode);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box backgroundColor={"blackAlpha.700"} height="100vh">
        <Box height="5vh" />
        <HStack>
          <Box width={"5vw"} />
          <Image
            alt="logo"
            src={"/PrettifyCadence.png"}
            width="400"
            height="30"
          />
        </HStack>
        <HStack justifyContent={"center"} height={"80vh"}>
          <CodeEditor
            value={before}
            onChange={(value, event) => setBefore(value)}
            width={"40vw"}
            maxLines={40}
          />
          <Button ml="3vw" mr="3vw" type="button" onClick={() => onClick()}>
            {"Pretty >>"}
          </Button>
          <CodeEditor value={after} width={"40vw"} maxLines={40} />
        </HStack>
        <Box height="10vh" />
      </Box>
    </>
  );
};

export async function getStaticProps() {
  // `getStaticProps()` の中で `fs` を少しでも利用すれば OK
  // fs;
  // cadence;
  // prettier;
  // antlr;
  return {
    props: {},
  };
}

export default Home;
